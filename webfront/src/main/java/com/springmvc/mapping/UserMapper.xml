<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.UserMapper" >
    <resultMap id="BaseResultMap" type="com.springmvc.model.User" >
        <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="experience" property="experience" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List" >
        user_account, user_name, password,level,age,sex,experience,state
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from user
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.springmvc.model.User" >
        insert into user(user_account,password
        )
        values (#{userAccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.springmvc.model.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userAccount != null" >
                user_account,
            </if>
            <if test="password != null" >
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userAccount != null" >
                #{userAccount,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.model.User" >
        update user
        <set >
            <if test="userName != null" >
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="level != null" >
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="age != null" >
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="experience != null" >
                experience = #{experience,jdbcType=INTEGER},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.springmvc.model.User" >
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            level= #{level,jdbcType=INTEGER},
            age= #{age,jdbcType=INTEGER},
            sex = #{sex,jdbcType=VARCHAR},
            experience= #{experience,jdbcType=INTEGER},
            state= #{state,jdbcType=INTEGER}
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </update>


    <!--登录-->
    <select id="login" resultType="com.springmvc.model.User">
        select
        <include refid="Base_Column_List" />
        from user
        where user_account = #{userAccount} AND password = #{password}
    </select>
    <!--注册-->
    <insert id="register" parameterType="com.springmvc.model.User">
        INSERT INTO `user` (`user_account`,`password`) VALUE (#{userAccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
    </insert>


    <!-- 账号查重 -->
    <select id="duplicateAccountChecking" resultType="Integer" parameterType="java.lang.String">
        select count(*) from user
        where user_account = #{userAccount}
    </select>

    <!--修改密码-->
    <update id="modifyPassword" parameterType="com.springmvc.model.User" >
        update user
        set password = #{password,jdbcType=VARCHAR}
    </update>

    <!--修改个人角色信息-->
    <update id="modifyPersonalInfo" parameterType="com.springmvc.model.User" >
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
        age= #{age,jdbcType=INTEGER},
        sex = #{sex,jdbcType=VARCHAR}
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </update>

    <!--升级-->
    <update id="upgrade" parameterType="com.springmvc.model.User" >
        update user
        set
        level= #{level,jdbcType=INTEGER},
        experience= #{experience,jdbcType=INTEGER}
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </update>

    <!--获得经验-->
    <update id="getExperience" parameterType="com.springmvc.model.User" >
        update user
        set  experience= #{experience,jdbcType=INTEGER}
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </update>

    <!--更改账号登录状态-->
    <update id="modifyState" parameterType="com.springmvc.model.User" >
        update user
        set  state= #{state,jdbcType=INTEGER}
        where user_account = #{userAccount,jdbcType=VARCHAR}
    </update>

    <!--查看个人资料-->

</mapper>